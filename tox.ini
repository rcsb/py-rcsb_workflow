# File: tox.ini (Templated version)
#
[local_settings]
# project specific local settings
test_pattern = "test*.py"
#
fixture_pattern_1 = "fixtureP*.py"
# Source pathls (unquoted space separated list of files/directories) for linting and format checks
source_paths = rcsb/workflow  setup.py
#
fixture_path_1 = "rcsb/workflow/tests"
# Start directory path for test discovery
# Each path must reference valid directory that is searchable by Python (i.e. contains __init__.py)
#  ** It is harmless to point to paths containing no tests.
#
test_path_1 = "rcsb/workflow/tests"
# These are placeholders valid source directories without tests files
test_path_2 = "rcsb/workflow/chem"
# test_path_3 = "rcsb/workflow/chem"
# test_path_4 = "rcsb/workflow/chem"
#
# Comma separate list of directories for which test coverage will be evaluated
coverage_source_paths = "rcsb/workflow/cli,rcsb/workflow/chem,rcsb/workflow/targets,rcsb/workflow/tests"
coverage_exclude_paths = "rcsb/workflow/__init__.py,rcsb/workflow/targets/ProteinTargetSequenceExecutionWorkflow.py"
coverage_cutoff = 40
#
#
## --------------------------------------------------------------------------
##  ----------   No project specific setting beyond this point --------------
# Updated:  3-Jul-2019 jdw Cleanup
#           8-Jul-2019 jdw Disable flake8 plugin (pydocstyle compat issue)
#          12-Jul-2019 jdw Add placeholders for up to four test paths
#          13-Jul-2019 jdw Add coverage exclusion
#          14-Jan-2020 jdw Special version to deal with local chem toolkit dependencies. (not portable)
#                          ** NOTE added whitelist for pylint black and flake8
#           9-Jan-2023 aae updates for tox 4
##
[tox]
# The complete list of supported test environments to setup and invoke
envlist = format_pep8-{py310}, lint_pylint-{py310}, format_black-{py310}, py{310}
#
minversion = 3.7.0
skip_missing_interpreters = true
skipsdist = true

[testenv]
passenv = CONFIG_SUPPORT_TOKEN_ENV,OE_LICENSE
allowlist_externals = echo
commands =
    echo "Starting default tests in testenv"
basepython = py310: python3.10


[testenv:py310]
description = 'Run unit tests (unittest runner) using {envpython}'
platform=
       macos: darwin
       linux: linux
skip_install = true
sitepackages = true
recreate = true
alwayscopy=true
package = editable-legacy
deps =
       -r requirements.txt
commands =
    echo "Starting {envname} with {envpython}"
    {envpython} -V
    {envpython} -m unittest discover -v --start-directory {[local_settings]fixture_path_1} --pattern "{[local_settings]fixture_pattern_1}"
    {envpython} -m unittest discover -v --start-directory {[local_settings]test_path_1} --pattern "{[local_settings]test_pattern}"
    {envpython} -m unittest discover -v --start-directory {[local_settings]test_path_2} --pattern "{[local_settings]test_pattern}"
    # {envpython} -m unittest discover -v --start-directory {[local_settings]test_path_3} --pattern "{[local_settings]test_pattern}"
    # {envpython} -m unittest discover -v --start-directory {[local_settings]test_path_4} --pattern "{[local_settings]test_pattern}"
    echo "Completed {envname} with {envpython}"

#
[testenv:format_pep8-py310]
description = 'Run selected PEP8 compliance checks (flake8)'
platform=
       macos: darwin
       linux: linux
sitepackages = true
deps =
    flake8
    # This plugin is no longer compatible with latest pydocstyles -
    # flake8-docstrings>=0.2.7
    flake8-import-order>=0.9
    -r requirements.txt
commands =
    echo "Starting {envname}"
    # Exceptions: D for docstrings, I for imports order and formatting, E302 is slice spacing  - W503 multiline spacing incompatible with black
    flake8 --max-line-length=185 --ignore=D,I,E203,W503  {[local_settings]source_paths}
    echo "Completed {envname}"

#
[testenv:lint_pylint-py310]
description = 'Run linting compliance checks (pylint)'
platform=
       macos: darwin
       linux: linux
sitepackages = true
deps =
    pylint
    -r requirements.txt
commands =
    echo "Starting {envname}"
    pylint --disable=R,C --reports=n --rcfile={toxinidir}/pylintrc  {[local_settings]source_paths}
    echo "Completed {envname}"

#
[testenv:format_black-py310]
description = 'Run format compliance checks (black)'
platform=
       macos: darwin
       linux: linux
sitepackages = true
deps =
    black>=21.5b1
    -r requirements.txt
    #    isort>=4.3.20
commands =
    echo "Starting {envname}"
    black --check --line-length 180  {[local_settings]source_paths}
    #    isort -rc rcsb/utils --check-only
    echo "Completed {envname}"

#
[testenv:test_coverage-py310]
description = 'Run test coverage analysis'
platform=
       macos: darwin
       linux: linux
recreate = true
alwayscopy=true
package = editable-legacy
deps =
    coverage
    -r requirements.txt

commands =
    echo "Starting {envname}"
    coverage erase
    coverage run --parallel-mode --omit="{[local_settings]coverage_exclude_paths}" --source="{[local_settings]coverage_source_paths}" -m unittest discover -v --start-directory {[local_settings]fixture_path_1} --pattern "{[local_settings]fixture_pattern_1}"
    coverage run --parallel-mode --omit="{[local_settings]coverage_exclude_paths}" --source="{[local_settings]coverage_source_paths}" -m unittest discover -v --start-directory  {[local_settings]test_path_1} --pattern "{[local_settings]test_pattern}"
    coverage run --parallel-mode --omit="{[local_settings]coverage_exclude_paths}"  --source="{[local_settings]coverage_source_paths}" -m unittest discover -v --start-directory  {[local_settings]test_path_2} --pattern "{[local_settings]test_pattern}"
    # coverage run --parallel-mode --omit="{[local_settings]coverage_exclude_paths}"  --source="{[local_settings]coverage_source_paths}" -m unittest discover -v --start-directory  {[local_settings]test_path_3} --pattern "{[local_settings]test_pattern}"
    # coverage run --parallel-mode --omit="{[local_settings]coverage_exclude_paths}"  --source="{[local_settings]coverage_source_paths}" -m unittest discover -v --start-directory  {[local_settings]test_path_4} --pattern "{[local_settings]test_pattern}"
     echo " ------- Consolidating {envname} data ----------"
    coverage combine
    echo " ------- Building {envname} reports ----------"
    coverage report --fail-under={[local_settings]coverage_cutoff}
    - coverage xml
    echo "Completed {envname}"